pipeline {
    agent any

    environment {
        VENV_DIR = "venv"
    }

    stages {

        stage('Checkout') {
            steps {
                git(
                    url: 'https://github.com/pointerjm/alx-backend-python.git',
                    branch: 'main'
                )
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    # Create and prepare virtual environment
                    python3 -m venv ${VENV_DIR}
                    ${VENV_DIR}/bin/pip install --upgrade pip
                    
                    # Install project dependencies
                    ${VENV_DIR}/bin/pip install -r messaging_app/requirements.txt
                    
                    # Install testing tools
                    ${VENV_DIR}/bin/pip install pytest
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    # Run tests using pytest inside the virtualenv
                    ${VENV_DIR}/bin/pytest messaging_app/tests --junitxml=report.xml
                '''
            }
            post {
                always {
                    // Publish JUnit test results even if tests fail
                    junit allowEmptyResults: true, testResults: 'report.xml'
                }
            }
        }
    }

    post {
        always {
            echo "‚úÖ Pipeline completed (success or failure). Cleaning up workspace..."
        }
        success {
            echo "üéâ All stages completed successfully!"
        }
        failure {
            echo "‚ùå Pipeline failed. Check logs above for details."
        }
    }
}
